### YamlMime:ManagedReference
items:
- uid: TicketShopWebApplication.Pages.Account.RegisterModel
  commentId: T:TicketShopWebApplication.Pages.Account.RegisterModel
  id: RegisterModel
  parent: TicketShopWebApplication.Pages.Account
  children:
  - TicketShopWebApplication.Pages.Account.RegisterModel.#ctor(UserManager{TicketShopWebApplication.Data.ApplicationUser},SignInManager{TicketShopWebApplication.Data.ApplicationUser},ILogger{TicketShopWebApplication.Pages.Account.LoginModel},TicketShopWebApplication.Services.IEmailSender)
  - TicketShopWebApplication.Pages.Account.RegisterModel.Input
  - TicketShopWebApplication.Pages.Account.RegisterModel.OnGet(System.String)
  - TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync(System.String)
  - TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
  langs:
  - csharp
  - vb
  name: RegisterModel
  nameWithType: RegisterModel
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel
  type: Class
  source:
    id: RegisterModel
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 14
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: 'public class RegisterModel : PageModel'
    content.vb: >-
      Public Class RegisterModel
          Inherits PageModel
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.#ctor(UserManager{TicketShopWebApplication.Data.ApplicationUser},SignInManager{TicketShopWebApplication.Data.ApplicationUser},ILogger{TicketShopWebApplication.Pages.Account.LoginModel},TicketShopWebApplication.Services.IEmailSender)
  commentId: M:TicketShopWebApplication.Pages.Account.RegisterModel.#ctor(UserManager{TicketShopWebApplication.Data.ApplicationUser},SignInManager{TicketShopWebApplication.Data.ApplicationUser},ILogger{TicketShopWebApplication.Pages.Account.LoginModel},TicketShopWebApplication.Services.IEmailSender)
  id: '#ctor(UserManager{TicketShopWebApplication.Data.ApplicationUser},SignInManager{TicketShopWebApplication.Data.ApplicationUser},ILogger{TicketShopWebApplication.Pages.Account.LoginModel},TicketShopWebApplication.Services.IEmailSender)'
  parent: TicketShopWebApplication.Pages.Account.RegisterModel
  langs:
  - csharp
  - vb
  name: RegisterModel(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, ILogger<LoginModel>, IEmailSender)
  nameWithType: RegisterModel.RegisterModel(UserManager<ApplicationUser>, SignInManager<ApplicationUser>, ILogger<LoginModel>, IEmailSender)
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.RegisterModel(UserManager<TicketShopWebApplication.Data.ApplicationUser>, SignInManager<TicketShopWebApplication.Data.ApplicationUser>, ILogger<TicketShopWebApplication.Pages.Account.LoginModel>, TicketShopWebApplication.Services.IEmailSender)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 21
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: public RegisterModel(UserManager<ApplicationUser> userManager, SignInManager<ApplicationUser> signInManager, ILogger<LoginModel> logger, IEmailSender emailSender)
    parameters:
    - id: userManager
      type: UserManager{TicketShopWebApplication.Data.ApplicationUser}
    - id: signInManager
      type: SignInManager{TicketShopWebApplication.Data.ApplicationUser}
    - id: logger
      type: ILogger{TicketShopWebApplication.Pages.Account.LoginModel}
    - id: emailSender
      type: TicketShopWebApplication.Services.IEmailSender
    content.vb: Public Sub New(userManager As UserManager(Of ApplicationUser), signInManager As SignInManager(Of ApplicationUser), logger As ILogger(Of LoginModel), emailSender As IEmailSender)
  overload: TicketShopWebApplication.Pages.Account.RegisterModel.#ctor*
  nameWithType.vb: RegisterModel.RegisterModel(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), ILogger(Of LoginModel), IEmailSender)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TicketShopWebApplication.Pages.Account.RegisterModel.RegisterModel(UserManager(Of TicketShopWebApplication.Data.ApplicationUser), SignInManager(Of TicketShopWebApplication.Data.ApplicationUser), ILogger(Of TicketShopWebApplication.Pages.Account.LoginModel), TicketShopWebApplication.Services.IEmailSender)
  name.vb: RegisterModel(UserManager(Of ApplicationUser), SignInManager(Of ApplicationUser), ILogger(Of LoginModel), IEmailSender)
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.Input
  commentId: P:TicketShopWebApplication.Pages.Account.RegisterModel.Input
  id: Input
  parent: TicketShopWebApplication.Pages.Account.RegisterModel
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: RegisterModel.Input
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.Input
  type: Property
  source:
    id: Input
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 33
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: public RegisterModel.InputModel Input { get; set; }
    parameters: []
    return:
      type: TicketShopWebApplication.Pages.Account.RegisterModel.InputModel
    content.vb: Public Property Input As RegisterModel.InputModel
  overload: TicketShopWebApplication.Pages.Account.RegisterModel.Input*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
  commentId: P:TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
  id: ReturnUrl
  parent: TicketShopWebApplication.Pages.Account.RegisterModel
  langs:
  - csharp
  - vb
  name: ReturnUrl
  nameWithType: RegisterModel.ReturnUrl
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
  type: Property
  source:
    id: ReturnUrl
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 36
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: public string ReturnUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReturnUrl As String
  overload: TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.OnGet(System.String)
  commentId: M:TicketShopWebApplication.Pages.Account.RegisterModel.OnGet(System.String)
  id: OnGet(System.String)
  parent: TicketShopWebApplication.Pages.Account.RegisterModel
  langs:
  - csharp
  - vb
  name: OnGet(String)
  nameWithType: RegisterModel.OnGet(String)
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.OnGet(System.String)
  type: Method
  source:
    id: OnGet
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 57
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: public void OnGet(string returnUrl = null)
    parameters:
    - id: returnUrl
      type: System.String
    content.vb: Public Sub OnGet(returnUrl As String = Nothing)
  overload: TicketShopWebApplication.Pages.Account.RegisterModel.OnGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync(System.String)
  commentId: M:TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync(System.String)
  id: OnPostAsync(System.String)
  parent: TicketShopWebApplication.Pages.Account.RegisterModel
  langs:
  - csharp
  - vb
  name: OnPostAsync(String)
  nameWithType: RegisterModel.OnPostAsync(String)
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync(System.String)
  type: Method
  source:
    id: OnPostAsync
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\TicketShopWebApplication\Pages\Account\Register.cshtml.cs
    startLine: 62
  assemblies:
  - TicketShopWebApplication
  namespace: TicketShopWebApplication.Pages.Account
  syntax:
    content: public Task<IActionResult> OnPostAsync(string returnUrl = null)
    parameters:
    - id: returnUrl
      type: System.String
    return:
      type: Task{IActionResult}
    content.vb: Public Function OnPostAsync(returnUrl As String = Nothing) As Task(Of IActionResult)
  overload: TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketShopWebApplication.Pages.Account
  commentId: N:TicketShopWebApplication.Pages.Account
  isExternal: false
  name: TicketShopWebApplication.Pages.Account
  nameWithType: TicketShopWebApplication.Pages.Account
  fullName: TicketShopWebApplication.Pages.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.#ctor*
  commentId: Overload:TicketShopWebApplication.Pages.Account.RegisterModel.#ctor
  isExternal: false
  name: RegisterModel
  nameWithType: RegisterModel.RegisterModel
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.RegisterModel
- uid: UserManager{TicketShopWebApplication.Data.ApplicationUser}
  commentId: '!:UserManager{TicketShopWebApplication.Data.ApplicationUser}'
  definition: UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: UserManager<TicketShopWebApplication.Data.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: UserManager(Of TicketShopWebApplication.Data.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShopWebApplication.Data.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: TicketShopWebApplication.Data.ApplicationUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShopWebApplication.Data.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: TicketShopWebApplication.Data.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: SignInManager{TicketShopWebApplication.Data.ApplicationUser}
  commentId: '!:SignInManager{TicketShopWebApplication.Data.ApplicationUser}'
  definition: SignInManager`1
  name: SignInManager<ApplicationUser>
  nameWithType: SignInManager<ApplicationUser>
  fullName: SignInManager<TicketShopWebApplication.Data.ApplicationUser>
  nameWithType.vb: SignInManager(Of ApplicationUser)
  fullName.vb: SignInManager(Of TicketShopWebApplication.Data.ApplicationUser)
  name.vb: SignInManager(Of ApplicationUser)
  spec.csharp:
  - uid: SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShopWebApplication.Data.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: TicketShopWebApplication.Data.ApplicationUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShopWebApplication.Data.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: TicketShopWebApplication.Data.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{TicketShopWebApplication.Pages.Account.LoginModel}
  commentId: '!:ILogger{TicketShopWebApplication.Pages.Account.LoginModel}'
  definition: ILogger`1
  name: ILogger<LoginModel>
  nameWithType: ILogger<LoginModel>
  fullName: ILogger<TicketShopWebApplication.Pages.Account.LoginModel>
  nameWithType.vb: ILogger(Of LoginModel)
  fullName.vb: ILogger(Of TicketShopWebApplication.Pages.Account.LoginModel)
  name.vb: ILogger(Of LoginModel)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketShopWebApplication.Pages.Account.LoginModel
    name: LoginModel
    nameWithType: LoginModel
    fullName: TicketShopWebApplication.Pages.Account.LoginModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketShopWebApplication.Pages.Account.LoginModel
    name: LoginModel
    nameWithType: LoginModel
    fullName: TicketShopWebApplication.Pages.Account.LoginModel
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShopWebApplication.Services.IEmailSender
  commentId: T:TicketShopWebApplication.Services.IEmailSender
  parent: TicketShopWebApplication.Services
  isExternal: false
  name: IEmailSender
  nameWithType: IEmailSender
  fullName: TicketShopWebApplication.Services.IEmailSender
- uid: UserManager`1
  isExternal: true
  name: UserManager<>
  nameWithType: UserManager<>
  fullName: UserManager<>
  nameWithType.vb: UserManager(Of )
  fullName.vb: UserManager(Of )
  name.vb: UserManager(Of )
  spec.csharp:
  - uid: UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SignInManager`1
  isExternal: true
  name: SignInManager<>
  nameWithType: SignInManager<>
  fullName: SignInManager<>
  nameWithType.vb: SignInManager(Of )
  fullName.vb: SignInManager(Of )
  name.vb: SignInManager(Of )
  spec.csharp:
  - uid: SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: SignInManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SignInManager`1
    name: SignInManager
    nameWithType: SignInManager
    fullName: SignInManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketShopWebApplication.Services
  commentId: N:TicketShopWebApplication.Services
  isExternal: false
  name: TicketShopWebApplication.Services
  nameWithType: TicketShopWebApplication.Services
  fullName: TicketShopWebApplication.Services
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.Input*
  commentId: Overload:TicketShopWebApplication.Pages.Account.RegisterModel.Input
  isExternal: false
  name: Input
  nameWithType: RegisterModel.Input
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.Input
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.InputModel
  commentId: T:TicketShopWebApplication.Pages.Account.RegisterModel.InputModel
  parent: TicketShopWebApplication.Pages.Account
  isExternal: false
  name: RegisterModel.InputModel
  nameWithType: RegisterModel.InputModel
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.InputModel
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl*
  commentId: Overload:TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
  isExternal: false
  name: ReturnUrl
  nameWithType: RegisterModel.ReturnUrl
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.ReturnUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.OnGet*
  commentId: Overload:TicketShopWebApplication.Pages.Account.RegisterModel.OnGet
  isExternal: false
  name: OnGet
  nameWithType: RegisterModel.OnGet
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.OnGet
- uid: TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync*
  commentId: Overload:TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync
  isExternal: false
  name: OnPostAsync
  nameWithType: RegisterModel.OnPostAsync
  fullName: TicketShopWebApplication.Pages.Account.RegisterModel.OnPostAsync
- uid: Task{IActionResult}
  commentId: '!:Task{IActionResult}'
  definition: Task`1
  name: Task<IActionResult>
  nameWithType: Task<IActionResult>
  fullName: Task<IActionResult>
  nameWithType.vb: Task(Of IActionResult)
  fullName.vb: Task(Of IActionResult)
  name.vb: Task(Of IActionResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: IActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IActionResult
    name: IActionResult
    nameWithType: IActionResult
    fullName: IActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
