### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction
  commentId: T:TicketSystem.DatabaseRepository.Model.TicketTransaction
  id: TicketTransaction
  parent: TicketSystem.DatabaseRepository.Model
  children:
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.City
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
  - TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
  langs:
  - csharp
  - vb
  name: TicketTransaction
  nameWithType: TicketTransaction
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction
  type: Class
  source:
    id: TicketTransaction
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 7
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public class TicketTransaction
    content.vb: Public Class TicketTransaction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
  id: TransactionID
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: TransactionID
  nameWithType: TicketTransaction.TransactionID
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
  type: Property
  source:
    id: TransactionID
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 9
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int TransactionID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TransactionID As Integer
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
  id: LastName
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: TicketTransaction.LastName
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
  type: Property
  source:
    id: LastName
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 10
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: >-
      [Required]

      [RegularExpression("^(([A-za-z]+[\\s]{1}[A-za-z]+)|([A-Za-z]+))$")]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <RegularExpression("^(([A-za-z]+[\s]{1}[A-za-z]+)|([A-Za-z]+))$")>

      Public Property LastName As String
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^(([A-za-z]+[\s]{1}[A-za-z]+)|([A-Za-z]+))$
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
  id: FirstName
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: TicketTransaction.FirstName
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
  type: Property
  source:
    id: FirstName
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 13
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: >-
      [Required]

      [RegularExpression("^(([A-za-z]+[\\s]{1}[A-za-z]+)|([A-Za-z]+))$")]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <RegularExpression("^(([A-za-z]+[\s]{1}[A-za-z]+)|([A-Za-z]+))$")>

      Public Property FirstName As String
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^(([A-za-z]+[\s]{1}[A-za-z]+)|([A-Za-z]+))$
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
  id: Address
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: TicketTransaction.Address
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
  type: Property
  source:
    id: Address
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 16
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: >-
      [Required]

      public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Address As String
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.Address*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.City
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.City
  id: City
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: City
  nameWithType: TicketTransaction.City
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.City
  type: Property
  source:
    id: City
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 18
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property City As String
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.City*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
  id: PaymentStatus
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: PaymentStatus
  nameWithType: TicketTransaction.PaymentStatus
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
  type: Property
  source:
    id: PaymentStatus
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 19
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string PaymentStatus { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PaymentStatus As String
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
  id: PaymentReferenceID
  parent: TicketSystem.DatabaseRepository.Model.TicketTransaction
  langs:
  - csharp
  - vb
  name: PaymentReferenceID
  nameWithType: TicketTransaction.PaymentReferenceID
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
  type: Property
  source:
    id: PaymentReferenceID
    path: C:\Users\Adriana\Documents\GitHub\ticketSystem-team-terminator\src\DatabaseRepository\Model\TicketTransaction.cs
    startLine: 20
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int PaymentReferenceID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PaymentReferenceID As Integer
  overload: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
  isExternal: false
  name: TransactionID
  nameWithType: TicketTransaction.TransactionID
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.TransactionID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
  isExternal: false
  name: LastName
  nameWithType: TicketTransaction.LastName
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.LastName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
  isExternal: false
  name: FirstName
  nameWithType: TicketTransaction.FirstName
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.FirstName
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.Address*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
  isExternal: false
  name: Address
  nameWithType: TicketTransaction.Address
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.Address
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.City*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.City
  isExternal: false
  name: City
  nameWithType: TicketTransaction.City
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.City
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
  isExternal: false
  name: PaymentStatus
  nameWithType: TicketTransaction.PaymentStatus
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentStatus
- uid: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
  isExternal: false
  name: PaymentReferenceID
  nameWithType: TicketTransaction.PaymentReferenceID
  fullName: TicketSystem.DatabaseRepository.Model.TicketTransaction.PaymentReferenceID
